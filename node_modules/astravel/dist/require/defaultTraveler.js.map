{"version":3,"sources":["../../src/defaultTraveler.js"],"names":["ForInStatement","FunctionDeclaration","RestElement","BinaryExpression","ArrayExpression","Block","MethodDefinition","ignore","Function","prototype","Found","node","state","defaultTraveler","go","type","find","predicate","finder","Object","create","error","makeChild","properties","traveler","key","Program","body","length","i","BlockStatement","StaticBlock","EmptyStatement","ExpressionStatement","expression","IfStatement","test","consequent","alternate","LabeledStatement","label","BreakStatement","ContinueStatement","WithStatement","object","SwitchStatement","discriminant","cases","SwitchCase","statements","ReturnStatement","argument","ThrowStatement","TryStatement","block","handler","finalizer","CatchClause","param","WhileStatement","DoWhileStatement","ForStatement","init","update","left","right","DebuggerStatement","id","params","VariableDeclaration","declarations","VariableDeclarator","ArrowFunctionExpression","ThisExpression","elements","element","ObjectExpression","Property","value","FunctionExpression","SequenceExpression","expressions","UnaryExpression","UpdateExpression","AssignmentExpression","LogicalExpression","ConditionalExpression","NewExpression","CallExpression","callee","args","MemberExpression","property","Identifier","PrivateIdentifier","Literal","ForOfStatement","ClassDeclaration","superClass","ClassBody","ImportDeclaration","specifiers","source","ImportNamespaceSpecifier","local","ImportDefaultSpecifier","ImportSpecifier","imported","ExportDefaultDeclaration","declaration","ExportNamedDeclaration","ExportSpecifier","exported","ExportAllDeclaration","PropertyDefinition","ClassExpression","Super","SpreadElement","YieldExpression","TaggedTemplateExpression","tag","quasi","TemplateLiteral","quasis","TemplateElement","ObjectPattern","ArrayPattern","AssignmentPattern","MetaProperty","meta","AwaitExpression"],"mappings":"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","sourcesContent":["let ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  Block,\n  MethodDefinition\n\nconst ignore = Function.prototype\n\nclass Found {\n  constructor(node, state) {\n    this.node = node\n    this.state = state\n  }\n}\n\nexport const defaultTraveler = {\n  go(node, state) {\n    /*\n    Starts travelling through the specified AST `node` with the provided `state`.\n    This method is recursively called by each node handler.\n    */\n    if (this[node.type]) {\n      this[node.type](node, state)\n    }\n  },\n  find(predicate, node, state) {\n    /*\n    Returns { node, state } for which `predicate(node, state)` returns truthy,\n    starting at the specified AST `node` and with the provided `state`.\n    Otherwise, returns `undefined`.\n    */\n    const finder = Object.create(this)\n    finder.go = function (node, state) {\n      if (predicate(node, state)) {\n        throw new Found(node, state)\n      }\n      this[node.type](node, state)\n    }\n    try {\n      finder.go(node, state)\n    } catch (error) {\n      if (error instanceof Found) {\n        return error\n      } else {\n        throw error\n      }\n    }\n  },\n  makeChild(properties = {}) {\n    /*\n    Returns a custom AST traveler that inherits from `this` traveler with its own provided `properties` and the property `super` that points to the parent traveler object.\n    */\n    const traveler = Object.create(this)\n    traveler.super = this\n    for (let key in properties) {\n      traveler[key] = properties[key]\n    }\n    return traveler\n  },\n  Program: (Block = function (node, state) {\n    const { body } = node\n    if (body != null) {\n      const { length } = body\n      for (let i = 0; i < length; i++) {\n        this.go(body[i], state)\n      }\n    }\n  }),\n  BlockStatement: Block,\n  StaticBlock: Block,\n  EmptyStatement: ignore,\n  ExpressionStatement(node, state) {\n    this.go(node.expression, state)\n  },\n  IfStatement(node, state) {\n    this.go(node.test, state)\n    this.go(node.consequent, state)\n    if (node.alternate != null) {\n      this.go(node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this.go(node.label, state)\n    this.go(node.body, state)\n  },\n  BreakStatement(node, state) {\n    if (node.label) {\n      this.go(node.label, state)\n    }\n  },\n  ContinueStatement(node, state) {\n    if (node.label) {\n      this.go(node.label, state)\n    }\n  },\n  WithStatement(node, state) {\n    this.go(node.object, state)\n    this.go(node.body, state)\n  },\n  SwitchStatement(node, state) {\n    this.go(node.discriminant, state)\n    const { cases } = node,\n      { length } = cases\n    for (let i = 0; i < length; i++) {\n      this.go(cases[i], state)\n    }\n  },\n  SwitchCase(node, state) {\n    if (node.test != null) {\n      this.go(node.test, state)\n    }\n    const statements = node.consequent,\n      { length } = statements\n    for (let i = 0; i < length; i++) {\n      this.go(statements[i], state)\n    }\n  },\n  ReturnStatement(node, state) {\n    if (node.argument) {\n      this.go(node.argument, state)\n    }\n  },\n  ThrowStatement(node, state) {\n    this.go(node.argument, state)\n  },\n  TryStatement(node, state) {\n    this.go(node.block, state)\n    if (node.handler != null) {\n      this.go(node.handler, state)\n    }\n    if (node.finalizer != null) {\n      this.go(node.finalizer, state)\n    }\n  },\n  CatchClause(node, state) {\n    if (node.param != null) {\n      this.go(node.param, state)\n    }\n    this.go(node.body, state)\n  },\n  WhileStatement(node, state) {\n    this.go(node.test, state)\n    this.go(node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    this.go(node.body, state)\n    this.go(node.test, state)\n  },\n  ForStatement(node, state) {\n    if (node.init != null) {\n      this.go(node.init, state)\n    }\n    if (node.test != null) {\n      this.go(node.test, state)\n    }\n    if (node.update != null) {\n      this.go(node.update, state)\n    }\n    this.go(node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n    this.go(node.body, state)\n  }),\n  DebuggerStatement: ignore,\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    if (node.id != null) {\n      this.go(node.id, state)\n    }\n    const { params } = node\n    if (params != null) {\n      for (let i = 0, { length } = params; i < length; i++) {\n        this.go(params[i], state)\n      }\n    }\n    this.go(node.body, state)\n  }),\n  VariableDeclaration(node, state) {\n    const { declarations } = node,\n      { length } = declarations\n    for (let i = 0; i < length; i++) {\n      this.go(declarations[i], state)\n    }\n  },\n  VariableDeclarator(node, state) {\n    this.go(node.id, state)\n    if (node.init != null) {\n      this.go(node.init, state)\n    }\n  },\n  ArrowFunctionExpression(node, state) {\n    const { params } = node\n    if (params != null) {\n      for (let i = 0, { length } = params; i < length; i++) {\n        this.go(params[i], state)\n      }\n    }\n    this.go(node.body, state)\n  },\n  ThisExpression: ignore,\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    const { elements } = node,\n      { length } = elements\n    for (let i = 0; i < length; i++) {\n      let element = elements[i]\n      if (element != null) {\n        this.go(elements[i], state)\n      }\n    }\n  }),\n  ObjectExpression(node, state) {\n    const { properties } = node,\n      { length } = properties\n    for (let i = 0; i < length; i++) {\n      this.go(properties[i], state)\n    }\n  },\n  Property(node, state) {\n    this.go(node.key, state)\n    if (node.value != null) {\n      this.go(node.value, state)\n    }\n  },\n  FunctionExpression: FunctionDeclaration,\n  SequenceExpression(node, state) {\n    const { expressions } = node,\n      { length } = expressions\n    for (let i = 0; i < length; i++) {\n      this.go(expressions[i], state)\n    }\n  },\n  UnaryExpression(node, state) {\n    this.go(node.argument, state)\n  },\n  UpdateExpression(node, state) {\n    this.go(node.argument, state)\n  },\n  AssignmentExpression(node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    this.go(node.test, state)\n    this.go(node.consequent, state)\n    this.go(node.alternate, state)\n  },\n  NewExpression(node, state) {\n    this.CallExpression(node, state)\n  },\n  CallExpression(node, state) {\n    this.go(node.callee, state)\n    const args = node['arguments'],\n      { length } = args\n    for (let i = 0; i < length; i++) {\n      this.go(args[i], state)\n    }\n  },\n  MemberExpression(node, state) {\n    this.go(node.object, state)\n    this.go(node.property, state)\n  },\n  Identifier: ignore,\n  PrivateIdentifier: ignore,\n  Literal: ignore,\n  ForOfStatement: ForInStatement,\n  ClassDeclaration(node, state) {\n    if (node.id) {\n      this.go(node.id, state)\n    }\n    if (node.superClass) {\n      this.go(node.superClass, state)\n    }\n    this.go(node.body, state)\n  },\n  ClassBody: Block,\n  ImportDeclaration(node, state) {\n    const { specifiers } = node,\n      { length } = specifiers\n    for (let i = 0; i < length; i++) {\n      this.go(specifiers[i], state)\n    }\n    this.go(node.source, state)\n  },\n  ImportNamespaceSpecifier(node, state) {\n    this.go(node.local, state)\n  },\n  ImportDefaultSpecifier(node, state) {\n    this.go(node.local, state)\n  },\n  ImportSpecifier(node, state) {\n    this.go(node.imported, state)\n    this.go(node.local, state)\n  },\n  ExportDefaultDeclaration(node, state) {\n    this.go(node.declaration, state)\n  },\n  ExportNamedDeclaration(node, state) {\n    if (node.declaration) {\n      this.go(node.declaration, state)\n    }\n    const { specifiers } = node,\n      { length } = specifiers\n    for (let i = 0; i < length; i++) {\n      this.go(specifiers[i], state)\n    }\n    if (node.source) {\n      this.go(node.source, state)\n    }\n  },\n  ExportSpecifier(node, state) {\n    this.go(node.local, state)\n    this.go(node.exported, state)\n  },\n  ExportAllDeclaration(node, state) {\n    this.go(node.source, state)\n  },\n  MethodDefinition: (MethodDefinition = function (node, state) {\n    this.go(node.key, state)\n    this.go(node.value, state)\n  }),\n  PropertyDefinition: MethodDefinition,\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  Super: ignore,\n  RestElement: (RestElement = function (node, state) {\n    this.go(node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    if (node.argument) {\n      this.go(node.argument, state)\n    }\n  },\n  TaggedTemplateExpression(node, state) {\n    this.go(node.tag, state)\n    this.go(node.quasi, state)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    for (let i = 0, { length } = expressions; i < length; i++) {\n      this.go(expressions[i], state)\n    }\n    for (let i = 0, { length } = quasis; i < length; i++) {\n      this.go(quasis[i], state)\n    }\n  },\n  TemplateElement: ignore,\n  ObjectPattern(node, state) {\n    const { properties } = node,\n      { length } = properties\n    for (let i = 0; i < length; i++) {\n      this.go(properties[i], state)\n    }\n  },\n  ArrayPattern: ArrayExpression,\n  AssignmentPattern(node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  },\n  MetaProperty(node, state) {\n    this.go(node.meta, state)\n    this.go(node.property, state)\n  },\n  AwaitExpression(node, state) {\n    this.go(node.argument, state)\n  },\n}\n"],"file":"defaultTraveler.js"}