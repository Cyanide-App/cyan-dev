{"version":3,"sources":["../../src/defaultTraveler.js"],"names":["ForInStatement","FunctionDeclaration","RestElement","BinaryExpression","ArrayExpression","Block","MethodDefinition","ignore","Function","prototype","Found","constructor","node","state","defaultTraveler","go","type","find","predicate","finder","Object","create","error","makeChild","properties","traveler","super","key","Program","body","length","i","BlockStatement","StaticBlock","EmptyStatement","ExpressionStatement","expression","IfStatement","test","consequent","alternate","LabeledStatement","label","BreakStatement","ContinueStatement","WithStatement","object","SwitchStatement","discriminant","cases","SwitchCase","statements","ReturnStatement","argument","ThrowStatement","TryStatement","block","handler","finalizer","CatchClause","param","WhileStatement","DoWhileStatement","ForStatement","init","update","left","right","DebuggerStatement","id","params","VariableDeclaration","declarations","VariableDeclarator","ArrowFunctionExpression","ThisExpression","elements","element","ObjectExpression","Property","value","FunctionExpression","SequenceExpression","expressions","UnaryExpression","UpdateExpression","AssignmentExpression","LogicalExpression","ConditionalExpression","NewExpression","CallExpression","callee","args","MemberExpression","property","Identifier","PrivateIdentifier","Literal","ForOfStatement","ClassDeclaration","superClass","ClassBody","ImportDeclaration","specifiers","source","ImportNamespaceSpecifier","local","ImportDefaultSpecifier","ImportSpecifier","imported","ExportDefaultDeclaration","declaration","ExportNamedDeclaration","ExportSpecifier","exported","ExportAllDeclaration","PropertyDefinition","ClassExpression","Super","SpreadElement","YieldExpression","TaggedTemplateExpression","tag","quasi","TemplateLiteral","quasis","TemplateElement","ObjectPattern","ArrayPattern","AssignmentPattern","MetaProperty","meta","AwaitExpression"],"mappings":"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","sourcesContent":["let ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  Block,\n  MethodDefinition\n\nconst ignore = Function.prototype\n\nclass Found {\n  constructor(node, state) {\n    this.node = node\n    this.state = state\n  }\n}\n\nexport const defaultTraveler = {\n  go(node, state) {\n    /*\n    Starts travelling through the specified AST `node` with the provided `state`.\n    This method is recursively called by each node handler.\n    */\n    if (this[node.type]) {\n      this[node.type](node, state)\n    }\n  },\n  find(predicate, node, state) {\n    /*\n    Returns { node, state } for which `predicate(node, state)` returns truthy,\n    starting at the specified AST `node` and with the provided `state`.\n    Otherwise, returns `undefined`.\n    */\n    const finder = Object.create(this)\n    finder.go = function (node, state) {\n      if (predicate(node, state)) {\n        throw new Found(node, state)\n      }\n      this[node.type](node, state)\n    }\n    try {\n      finder.go(node, state)\n    } catch (error) {\n      if (error instanceof Found) {\n        return error\n      } else {\n        throw error\n      }\n    }\n  },\n  makeChild(properties = {}) {\n    /*\n    Returns a custom AST traveler that inherits from `this` traveler with its own provided `properties` and the property `super` that points to the parent traveler object.\n    */\n    const traveler = Object.create(this)\n    traveler.super = this\n    for (let key in properties) {\n      traveler[key] = properties[key]\n    }\n    return traveler\n  },\n  Program: (Block = function (node, state) {\n    const { body } = node\n    if (body != null) {\n      const { length } = body\n      for (let i = 0; i < length; i++) {\n        this.go(body[i], state)\n      }\n    }\n  }),\n  BlockStatement: Block,\n  StaticBlock: Block,\n  EmptyStatement: ignore,\n  ExpressionStatement(node, state) {\n    this.go(node.expression, state)\n  },\n  IfStatement(node, state) {\n    this.go(node.test, state)\n    this.go(node.consequent, state)\n    if (node.alternate != null) {\n      this.go(node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this.go(node.label, state)\n    this.go(node.body, state)\n  },\n  BreakStatement(node, state) {\n    if (node.label) {\n      this.go(node.label, state)\n    }\n  },\n  ContinueStatement(node, state) {\n    if (node.label) {\n      this.go(node.label, state)\n    }\n  },\n  WithStatement(node, state) {\n    this.go(node.object, state)\n    this.go(node.body, state)\n  },\n  SwitchStatement(node, state) {\n    this.go(node.discriminant, state)\n    const { cases } = node,\n      { length } = cases\n    for (let i = 0; i < length; i++) {\n      this.go(cases[i], state)\n    }\n  },\n  SwitchCase(node, state) {\n    if (node.test != null) {\n      this.go(node.test, state)\n    }\n    const statements = node.consequent,\n      { length } = statements\n    for (let i = 0; i < length; i++) {\n      this.go(statements[i], state)\n    }\n  },\n  ReturnStatement(node, state) {\n    if (node.argument) {\n      this.go(node.argument, state)\n    }\n  },\n  ThrowStatement(node, state) {\n    this.go(node.argument, state)\n  },\n  TryStatement(node, state) {\n    this.go(node.block, state)\n    if (node.handler != null) {\n      this.go(node.handler, state)\n    }\n    if (node.finalizer != null) {\n      this.go(node.finalizer, state)\n    }\n  },\n  CatchClause(node, state) {\n    if (node.param != null) {\n      this.go(node.param, state)\n    }\n    this.go(node.body, state)\n  },\n  WhileStatement(node, state) {\n    this.go(node.test, state)\n    this.go(node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    this.go(node.body, state)\n    this.go(node.test, state)\n  },\n  ForStatement(node, state) {\n    if (node.init != null) {\n      this.go(node.init, state)\n    }\n    if (node.test != null) {\n      this.go(node.test, state)\n    }\n    if (node.update != null) {\n      this.go(node.update, state)\n    }\n    this.go(node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n    this.go(node.body, state)\n  }),\n  DebuggerStatement: ignore,\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    if (node.id != null) {\n      this.go(node.id, state)\n    }\n    const { params } = node\n    if (params != null) {\n      for (let i = 0, { length } = params; i < length; i++) {\n        this.go(params[i], state)\n      }\n    }\n    this.go(node.body, state)\n  }),\n  VariableDeclaration(node, state) {\n    const { declarations } = node,\n      { length } = declarations\n    for (let i = 0; i < length; i++) {\n      this.go(declarations[i], state)\n    }\n  },\n  VariableDeclarator(node, state) {\n    this.go(node.id, state)\n    if (node.init != null) {\n      this.go(node.init, state)\n    }\n  },\n  ArrowFunctionExpression(node, state) {\n    const { params } = node\n    if (params != null) {\n      for (let i = 0, { length } = params; i < length; i++) {\n        this.go(params[i], state)\n      }\n    }\n    this.go(node.body, state)\n  },\n  ThisExpression: ignore,\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    const { elements } = node,\n      { length } = elements\n    for (let i = 0; i < length; i++) {\n      let element = elements[i]\n      if (element != null) {\n        this.go(elements[i], state)\n      }\n    }\n  }),\n  ObjectExpression(node, state) {\n    const { properties } = node,\n      { length } = properties\n    for (let i = 0; i < length; i++) {\n      this.go(properties[i], state)\n    }\n  },\n  Property(node, state) {\n    this.go(node.key, state)\n    if (node.value != null) {\n      this.go(node.value, state)\n    }\n  },\n  FunctionExpression: FunctionDeclaration,\n  SequenceExpression(node, state) {\n    const { expressions } = node,\n      { length } = expressions\n    for (let i = 0; i < length; i++) {\n      this.go(expressions[i], state)\n    }\n  },\n  UnaryExpression(node, state) {\n    this.go(node.argument, state)\n  },\n  UpdateExpression(node, state) {\n    this.go(node.argument, state)\n  },\n  AssignmentExpression(node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    this.go(node.test, state)\n    this.go(node.consequent, state)\n    this.go(node.alternate, state)\n  },\n  NewExpression(node, state) {\n    this.CallExpression(node, state)\n  },\n  CallExpression(node, state) {\n    this.go(node.callee, state)\n    const args = node['arguments'],\n      { length } = args\n    for (let i = 0; i < length; i++) {\n      this.go(args[i], state)\n    }\n  },\n  MemberExpression(node, state) {\n    this.go(node.object, state)\n    this.go(node.property, state)\n  },\n  Identifier: ignore,\n  PrivateIdentifier: ignore,\n  Literal: ignore,\n  ForOfStatement: ForInStatement,\n  ClassDeclaration(node, state) {\n    if (node.id) {\n      this.go(node.id, state)\n    }\n    if (node.superClass) {\n      this.go(node.superClass, state)\n    }\n    this.go(node.body, state)\n  },\n  ClassBody: Block,\n  ImportDeclaration(node, state) {\n    const { specifiers } = node,\n      { length } = specifiers\n    for (let i = 0; i < length; i++) {\n      this.go(specifiers[i], state)\n    }\n    this.go(node.source, state)\n  },\n  ImportNamespaceSpecifier(node, state) {\n    this.go(node.local, state)\n  },\n  ImportDefaultSpecifier(node, state) {\n    this.go(node.local, state)\n  },\n  ImportSpecifier(node, state) {\n    this.go(node.imported, state)\n    this.go(node.local, state)\n  },\n  ExportDefaultDeclaration(node, state) {\n    this.go(node.declaration, state)\n  },\n  ExportNamedDeclaration(node, state) {\n    if (node.declaration) {\n      this.go(node.declaration, state)\n    }\n    const { specifiers } = node,\n      { length } = specifiers\n    for (let i = 0; i < length; i++) {\n      this.go(specifiers[i], state)\n    }\n    if (node.source) {\n      this.go(node.source, state)\n    }\n  },\n  ExportSpecifier(node, state) {\n    this.go(node.local, state)\n    this.go(node.exported, state)\n  },\n  ExportAllDeclaration(node, state) {\n    this.go(node.source, state)\n  },\n  MethodDefinition: (MethodDefinition = function (node, state) {\n    this.go(node.key, state)\n    this.go(node.value, state)\n  }),\n  PropertyDefinition: MethodDefinition,\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  Super: ignore,\n  RestElement: (RestElement = function (node, state) {\n    this.go(node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    if (node.argument) {\n      this.go(node.argument, state)\n    }\n  },\n  TaggedTemplateExpression(node, state) {\n    this.go(node.tag, state)\n    this.go(node.quasi, state)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    for (let i = 0, { length } = expressions; i < length; i++) {\n      this.go(expressions[i], state)\n    }\n    for (let i = 0, { length } = quasis; i < length; i++) {\n      this.go(quasis[i], state)\n    }\n  },\n  TemplateElement: ignore,\n  ObjectPattern(node, state) {\n    const { properties } = node,\n      { length } = properties\n    for (let i = 0; i < length; i++) {\n      this.go(properties[i], state)\n    }\n  },\n  ArrayPattern: ArrayExpression,\n  AssignmentPattern(node, state) {\n    this.go(node.left, state)\n    this.go(node.right, state)\n  },\n  MetaProperty(node, state) {\n    this.go(node.meta, state)\n    this.go(node.property, state)\n  },\n  AwaitExpression(node, state) {\n    this.go(node.argument, state)\n  },\n}\n"],"file":"defaultTraveler.js"}