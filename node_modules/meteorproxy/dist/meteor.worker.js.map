{
  "version": 3,
  "sources": ["../node_modules/.pnpm/set-cookie-parser@2.6.0/node_modules/set-cookie-parser/lib/set-cookie.js", "../node_modules/.pnpm/@mercuryworkshop+bare-mux@2.0.2/node_modules/@mercuryworkshop/bare-mux/dist/index.mjs", "../package.json", "../node_modules/.pnpm/@webreflection+idb-map@0.3.1/node_modules/@webreflection/idb-map/index.js", "../node_modules/.pnpm/cookie-es@1.1.0/node_modules/cookie-es/dist/index.mjs", "../src/bundle/util/cookies.ts", "../src/errorpagecss.ts", "../src/worker.ts"],
  "sourcesContent": ["\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "const maxRedirects = 20;\n\n// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\nconst fetch = globalThis.fetch;\nconst WebSocket = globalThis.WebSocket;\nconst Request = globalThis.Request;\nconst Response = globalThis.Response;\nconst SharedWorker = globalThis.SharedWorker;\nconst localStorage = globalThis.localStorage;\nconst serviceWorker = globalThis.navigator.serviceWorker;\nconst WebSocketFields = {\n    prototype: {\n        send: WebSocket.prototype.send,\n    },\n    CLOSED: WebSocket.CLOSED,\n    CLOSING: WebSocket.CLOSING,\n    CONNECTING: WebSocket.CONNECTING,\n    OPEN: WebSocket.OPEN,\n};\n\nasync function searchForPort() {\n    // @ts-expect-error\n    const clients = await self.clients.matchAll({ type: \"window\", includeUncontrolled: true });\n    const promises = clients.map(async (x) => {\n        const port = await tryGetPort(x);\n        await testPort(port);\n        return port;\n    });\n    const promise = Promise.race([Promise.any(promises), new Promise((_, reject) => setTimeout(reject, 1000, new TypeError(\"timeout\")))]);\n    try {\n        return await promise;\n    }\n    catch (err) {\n        if (err instanceof AggregateError) {\n            console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\");\n            throw new Error(\"All clients returned an invalid MessagePort.\");\n        }\n        console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\");\n        return await searchForPort();\n    }\n}\nfunction tryGetPort(client) {\n    let channel = new MessageChannel();\n    return new Promise(resolve => {\n        client.postMessage({ type: \"getPort\", port: channel.port2 }, [channel.port2]);\n        channel.port1.onmessage = event => {\n            resolve(event.data);\n        };\n    });\n}\nfunction testPort(port) {\n    const pingChannel = new MessageChannel();\n    const pingPromise = new Promise((resolve, reject) => {\n        pingChannel.port1.onmessage = event => {\n            if (event.data.type === \"pong\") {\n                resolve();\n            }\n        };\n        setTimeout(reject, 1500);\n    });\n    port.postMessage({ message: { type: \"ping\" }, port: pingChannel.port2 }, [pingChannel.port2]);\n    return pingPromise;\n}\nfunction createPort(path, registerHandlers) {\n    const worker = new SharedWorker(path, \"bare-mux-worker\");\n    if (registerHandlers) {\n        // @ts-expect-error we are using snapshot.ts\n        serviceWorker.addEventListener(\"message\", (event) => {\n            if (event.data.type === \"getPort\" && event.data.port) {\n                console.debug(\"bare-mux: recieved request for port from sw\");\n                const newWorker = new SharedWorker(path, \"bare-mux-worker\");\n                event.data.port.postMessage(newWorker.port, [newWorker.port]);\n            }\n        });\n    }\n    return worker.port;\n}\nlet browserSupportsTransferringStreamsCache = null;\nfunction browserSupportsTransferringStreams() {\n    if (browserSupportsTransferringStreamsCache === null) {\n        const chan = new MessageChannel();\n        const stream = new ReadableStream();\n        let res;\n        try {\n            chan.port1.postMessage(stream, [stream]);\n            res = true;\n        }\n        catch (err) {\n            res = false;\n        }\n        browserSupportsTransferringStreamsCache = res;\n        return res;\n    }\n    else {\n        return browserSupportsTransferringStreamsCache;\n    }\n}\nclass WorkerConnection {\n    constructor(worker) {\n        this.channel = new BroadcastChannel(\"bare-mux\");\n        if (worker instanceof MessagePort) {\n            this.port = worker;\n        }\n        else {\n            this.createChannel(worker, true);\n        }\n    }\n    createChannel(workerPath, inInit) {\n        // @ts-expect-error\n        if (self.clients) {\n            // running in a ServiceWorker\n            // ask a window for the worker port, register for refreshPort\n            this.port = searchForPort();\n            this.channel.onmessage = (event) => {\n                if (event.data.type === \"refreshPort\") {\n                    this.port = searchForPort();\n                }\n            };\n        }\n        else if (workerPath && SharedWorker) {\n            // running in a window, was passed a workerPath\n            // create the SharedWorker and help other bare-mux clients get the workerPath\n            if (!workerPath.startsWith(\"/\") && !workerPath.includes(\"://\"))\n                throw new Error(\"Invalid URL. Must be absolute or start at the root.\");\n            this.port = createPort(workerPath, inInit);\n            console.debug(\"bare-mux: setting localStorage bare-mux-path to\", workerPath);\n            localStorage[\"bare-mux-path\"] = workerPath;\n        }\n        else if (SharedWorker) {\n            // running in a window, was not passed a workerPath\n            // use sessionStorage for the workerPath\n            const path = localStorage[\"bare-mux-path\"];\n            console.debug(\"bare-mux: got localStorage bare-mux-path:\", path);\n            if (!path)\n                throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");\n            this.port = createPort(path, inInit);\n        }\n        else {\n            // SharedWorker does not exist\n            throw new Error(\"Unable to get a channel to the SharedWorker.\");\n        }\n    }\n    async sendMessage(message, transferable) {\n        if (this.port instanceof Promise)\n            this.port = await this.port;\n        try {\n            await testPort(this.port);\n        }\n        catch {\n            console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\");\n            this.createChannel();\n            return await this.sendMessage(message, transferable);\n        }\n        const channel = new MessageChannel();\n        const toTransfer = [channel.port2, ...(transferable || [])];\n        const promise = new Promise((resolve, reject) => {\n            channel.port1.onmessage = event => {\n                const message = event.data;\n                if (message.type === \"error\") {\n                    reject(message.error);\n                }\n                else {\n                    resolve(message);\n                }\n            };\n        });\n        this.port.postMessage({ message: message, port: channel.port2 }, toTransfer);\n        return await promise;\n    }\n}\n\nconst validChars = \"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\nfunction validProtocol(protocol) {\n    for (let i = 0; i < protocol.length; i++) {\n        const char = protocol[i];\n        if (!validChars.includes(char)) {\n            return false;\n        }\n    }\n    return true;\n}\nconst wsProtocols = ['ws:', 'wss:'];\nconst statusEmpty = [101, 204, 205, 304];\nconst statusRedirect = [301, 302, 303, 307, 308];\nclass BareMuxConnection {\n    constructor(workerPath) {\n        this.worker = new WorkerConnection(workerPath);\n    }\n    async getTransport() {\n        return (await this.worker.sendMessage({ type: \"get\" })).name;\n    }\n    async setTransport(path, options) {\n        await this.setManualTransport(`\n\t\t\tconst { default: BareTransport } = await import(\"${path}\");\n\t\t\treturn [new BareTransport(${options.map(x => JSON.stringify(x)).join(\", \")}), \"${path}\"];\n\t\t`);\n    }\n    async setManualTransport(functionBody) {\n        await this.worker.sendMessage({\n            type: \"set\",\n            client: functionBody,\n        });\n    }\n    getInnerPort() {\n        return this.worker.port;\n    }\n}\nclass BareClient {\n    /**\n     * Create a BareClient. Calls to fetch and connect will wait for an implementation to be ready.\n     */\n    constructor(worker) {\n        this.worker = new WorkerConnection(worker);\n    }\n    createWebSocket(remote, protocols = [], webSocketImpl, requestHeaders, arrayBufferImpl) {\n        try {\n            remote = new URL(remote);\n        }\n        catch (err) {\n            throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`);\n        }\n        if (!wsProtocols.includes(remote.protocol))\n            throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`);\n        if (!Array.isArray(protocols))\n            protocols = [protocols];\n        protocols = protocols.map(String);\n        for (const proto of protocols)\n            if (!validProtocol(proto))\n                throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`);\n        let wsImpl = (webSocketImpl || WebSocket);\n        const socket = new wsImpl(\"ws://127.0.0.1:1\", protocols);\n        let fakeProtocol = '';\n        let fakeReadyState = WebSocketFields.CONNECTING;\n        let initialErrorHappened = false;\n        socket.addEventListener(\"error\", (e) => {\n            if (!initialErrorHappened) {\n                fakeReadyState = WebSocket.CONNECTING;\n                e.stopImmediatePropagation();\n                initialErrorHappened = true;\n            }\n        });\n        let initialCloseHappened = false;\n        socket.addEventListener(\"close\", (e) => {\n            if (!initialCloseHappened) {\n                e.stopImmediatePropagation();\n                initialCloseHappened = true;\n            }\n        });\n        // TODO socket onerror will be broken\n        arrayBufferImpl = arrayBufferImpl || wsImpl.constructor.constructor(\"return ArrayBuffer\")().prototype;\n        requestHeaders = requestHeaders || {};\n        requestHeaders['Host'] = (new URL(remote)).host;\n        // requestHeaders['Origin'] = origin;\n        requestHeaders['Pragma'] = 'no-cache';\n        requestHeaders['Cache-Control'] = 'no-cache';\n        requestHeaders['Upgrade'] = 'websocket';\n        // requestHeaders['User-Agent'] = navigator.userAgent;\n        requestHeaders['Connection'] = 'Upgrade';\n        const onopen = (protocol) => {\n            fakeReadyState = WebSocketFields.OPEN;\n            fakeProtocol = protocol;\n            socket.meta = {\n                headers: {\n                    \"sec-websocket-protocol\": protocol,\n                }\n            }; // what the fuck is a meta\n            socket.dispatchEvent(new Event(\"open\"));\n        };\n        const onmessage = async (payload) => {\n            if (typeof payload === \"string\") {\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n            else if (\"byteLength\" in payload) {\n                if (socket.binaryType === \"blob\") {\n                    payload = new Blob([payload]);\n                }\n                else {\n                    Object.setPrototypeOf(payload, arrayBufferImpl);\n                }\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n            else if (\"arrayBuffer\" in payload) {\n                if (socket.binaryType === \"arraybuffer\") {\n                    payload = await payload.arrayBuffer();\n                    Object.setPrototypeOf(payload, arrayBufferImpl);\n                }\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n        };\n        const onclose = (code, reason) => {\n            fakeReadyState = WebSocketFields.CLOSED;\n            socket.dispatchEvent(new CloseEvent(\"close\", { code, reason }));\n        };\n        const onerror = () => {\n            fakeReadyState = WebSocketFields.CLOSED;\n            socket.dispatchEvent(new Event(\"error\"));\n        };\n        const channel = new MessageChannel();\n        channel.port1.onmessage = event => {\n            if (event.data.type === \"open\") {\n                onopen(event.data.args[0]);\n            }\n            else if (event.data.type === \"message\") {\n                onmessage(event.data.args[0]);\n            }\n            else if (event.data.type === \"close\") {\n                onclose(event.data.args[0], event.data.args[1]);\n            }\n            else if (event.data.type === \"error\") {\n                onerror( /* event.data.args[0] */);\n            }\n        };\n        this.worker.sendMessage({\n            type: \"websocket\",\n            websocket: {\n                url: remote.toString(),\n                origin: origin,\n                protocols: protocols,\n                requestHeaders: requestHeaders,\n                channel: channel.port2,\n            },\n        }, [channel.port2]);\n        // protocol is always an empty before connecting\n        // updated when we receive the metadata\n        // this value doesn't change when it's CLOSING or CLOSED etc\n        const getReadyState = () => fakeReadyState;\n        // we have to hook .readyState ourselves\n        Object.defineProperty(socket, 'readyState', {\n            get: getReadyState,\n            configurable: true,\n            enumerable: true,\n        });\n        /**\n         * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\n         */\n        const getSendError = () => {\n            const readyState = getReadyState();\n            if (readyState === WebSocketFields.CONNECTING)\n                return new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");\n        };\n        // we have to hook .send ourselves\n        // use ...args to avoid giving the number of args a quantity\n        // no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\n        socket.send = function (...args) {\n            const error = getSendError();\n            if (error)\n                throw error;\n            let data = args[0];\n            // @ts-expect-error idk why it errors?\n            if (data.buffer)\n                data = data.buffer;\n            channel.port1.postMessage({ type: \"data\", data: data }, data instanceof ArrayBuffer ? [data] : []);\n        };\n        socket.close = function (code, reason) {\n            channel.port1.postMessage({ type: \"close\", closeCode: code, closeReason: reason });\n        };\n        Object.defineProperty(socket, 'url', {\n            get: () => remote.toString(),\n            configurable: true,\n            enumerable: true,\n        });\n        const getProtocol = () => fakeProtocol;\n        Object.defineProperty(socket, 'protocol', {\n            get: getProtocol,\n            configurable: true,\n            enumerable: true,\n        });\n        return socket;\n    }\n    async fetch(url, init) {\n        // Only create an instance of Request to parse certain parameters of init such as method, headers, redirect\n        // But use init values whenever possible\n        const req = new Request(url, init);\n        // try to use init.headers because it may contain capitalized headers\n        // furthermore, important headers on the Request class are blocked...\n        // we should try to preserve the capitalization due to quirks with earlier servers\n        const inputHeaders = init?.headers || req.headers;\n        const headers = inputHeaders instanceof Headers\n            ? Object.fromEntries(inputHeaders)\n            : inputHeaders;\n        const body = req.body;\n        let urlO = new URL(req.url);\n        if (urlO.protocol.startsWith('blob:')) {\n            const response = await fetch(urlO);\n            const result = new Response(response.body, response);\n            result.rawHeaders = Object.fromEntries(response.headers);\n            result.rawResponse = response;\n            return result;\n        }\n        for (let i = 0;; i++) {\n            if ('host' in headers)\n                headers.host = urlO.host;\n            else\n                headers.Host = urlO.host;\n            let resp = (await this.worker.sendMessage({\n                type: \"fetch\",\n                fetch: {\n                    remote: urlO.toString(),\n                    method: req.method,\n                    headers: headers,\n                    body: body || undefined,\n                },\n            }, body ? [body] : [])).fetch;\n            let responseobj = new Response(statusEmpty.includes(resp.status) ? undefined : resp.body, {\n                headers: new Headers(resp.headers),\n                status: resp.status,\n                statusText: resp.statusText,\n            });\n            responseobj.rawHeaders = resp.headers;\n            responseobj.rawResponse = new Response(resp.body);\n            responseobj.finalURL = urlO.toString();\n            const redirect = init?.redirect || req.redirect;\n            if (statusRedirect.includes(responseobj.status)) {\n                switch (redirect) {\n                    case 'follow': {\n                        const location = responseobj.headers.get('location');\n                        if (maxRedirects > i && location !== null) {\n                            urlO = new URL(location, urlO);\n                            continue;\n                        }\n                        else\n                            throw new TypeError('Failed to fetch');\n                    }\n                    case 'error':\n                        throw new TypeError('Failed to fetch');\n                    case 'manual':\n                        return responseobj;\n                }\n            }\n            else {\n                return responseobj;\n            }\n        }\n    }\n}\n\nexport { BareClient, BareMuxConnection, WebSocketFields, WorkerConnection, browserSupportsTransferringStreams, BareClient as default, maxRedirects, validProtocol };\n//# sourceMappingURL=index.mjs.map\n", "{\n  \"name\": \"meteorproxy\",\n  \"version\": \"1.0.6-patch.1\",\n  \"description\": \"The modern interception proxy you've been waiting for\",\n  \"type\": \"module\",\n  \"main\": \"./lib/index.cjs\",\n  \"types\": \"./lib/index.d.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/z1g-project/meteor.git\"\n  },\n  \"scripts\": {\n    \"build\": \"tsx build.ts\",\n    \"demo\": \"tsx server.ts\",\n    \"demo:lite\": \"tsx server.ts --no-build\",\n    \"rspack:build\": \"tsx rspack.ts\",\n    \"release\": \"tsc && biome check . --write && npm run build && npm publish --access public\",\n    \"check\": \"biome check . --write\",\n    \"typecheck\": \"tsc\"\n  },\n  \"files\": [\"dist\", \"lib\", \"src/types.d.ts\"],\n  \"keywords\": [],\n  \"author\": \"z1g Project\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@biomejs/biome\": \"1.8.3\",\n    \"@fastify/static\": \"^7.0.4\",\n    \"@mercuryworkshop/epoxy-transport\": \"^2.1.3\",\n    \"@types/estraverse\": \"^5.1.7\",\n    \"@types/node\": \"^20.14.10\",\n    \"@types/set-cookie-parser\": \"^2.4.10\",\n    \"consola\": \"^3.2.3\",\n    \"esbuild-plugin-copy\": \"^2.1.1\",\n    \"fastify\": \"^4.28.1\",\n    \"prettier\": \"^3.3.3\",\n    \"tsx\": \"^4.16.2\",\n    \"typescript\": \"^5.5.3\",\n    \"wisp-server-node\": \"^1.1.0\"\n  },\n  \"dependencies\": {\n    \"@mercuryworkshop/bare-mux\": \"^2.0.2\",\n    \"@mercuryworkshop/wisp-js\": \"^0.1.0\",\n    \"@types/estree\": \"^1.0.5\",\n    \"@webreflection/idb-map\": \"^0.3.1\",\n    \"astring\": \"^1.8.6\",\n    \"cookie-es\": \"^1.1.0\",\n    \"dom-serializer\": \"^2.0.0\",\n    \"domhandler\": \"^5.0.3\",\n    \"domutils\": \"^3.1.0\",\n    \"esbuild\": \"^0.23.0\",\n    \"estraverse\": \"^5.3.0\",\n    \"htmlparser2\": \"^9.1.0\",\n    \"meriyah\": \"^4.5.0\",\n    \"rimraf\": \"^6.0.1\",\n    \"set-cookie-parser\": \"^2.6.0\"\n  }\n}\n", "const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n", "const fieldContentRegExp = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/;\nfunction parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  const obj = {};\n  const opt = options || {};\n  const dec = opt.decode || decode;\n  let index = 0;\n  while (index < str.length) {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) {\n      break;\n    }\n    let endIdx = str.indexOf(\";\", index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    const key = str.slice(index, eqIdx).trim();\n    if (void 0 === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n      if (val.codePointAt(0) === 34) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\nfunction serialize(name, value, options) {\n  const opt = options || {};\n  const enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  const encodedValue = enc(value);\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  let str = name + \"=\" + encodedValue;\n  if (void 0 !== opt.maxAge && opt.maxAge !== null) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge) || !Number.isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (!isDate(opt.expires) || Number.isNaN(opt.expires.valueOf())) {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.priority) {\n    const priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case \"low\": {\n        str += \"; Priority=Low\";\n        break;\n      }\n      case \"medium\": {\n        str += \"; Priority=Medium\";\n        break;\n      }\n      case \"high\": {\n        str += \"; Priority=High\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option priority is invalid\");\n      }\n    }\n  }\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true: {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"lax\": {\n        str += \"; SameSite=Lax\";\n        break;\n      }\n      case \"strict\": {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"none\": {\n        str += \"; SameSite=None\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option sameSite is invalid\");\n      }\n    }\n  }\n  if (opt.partitioned) {\n    str += \"; Partitioned\";\n  }\n  return str;\n}\nfunction isDate(val) {\n  return Object.prototype.toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch {\n    return str;\n  }\n}\nfunction decode(str) {\n  return str.includes(\"%\") ? decodeURIComponent(str) : str;\n}\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\nexport { parse, serialize };\n", "import IDBMap from '@webreflection/idb-map'\nimport { serialize } from 'cookie-es'\nimport { parse } from 'set-cookie-parser'\nconst cookies = new IDBMap('cookies')\n\nexport async function getCookies(host: string) {\n  const now = new Date()\n  const result: Record<string, string>[] = []\n  for (const key of await cookies.keys()) {\n    if (key.startsWith(`${host}@`)) {\n      let isExpired = false\n      const cookie = await cookies.get(key)\n      if (cookie.maxAge) {\n        isExpired = cookie.set.getTime() + cookie.maxAge * 1e3 < now\n      } else if (cookie.expires) {\n        isExpired = new Date(cookie.expires.toLocaleString()) < now\n      }\n      if (isExpired) {\n        await cookies.delete(key)\n      } else {\n        result.push(cookie)\n      }\n    }\n  }\n  const header = result.map((cookie) =>\n    serialize(cookie.name, cookie.value, cookie)\n  )\n  return header\n}\nexport async function setCookies(header: string | string[], host: string) {\n  const parsed = parse(header)\n  for (const cookie of parsed) {\n    await cookies.set(`${host}@${cookie.name}`, cookie.value)\n  }\n}\n", "export default `\na,hr{color:inherit}progress,sub,sup{vertical-align:baseline}blockquote,body,dd,dl,fieldset,figure,h1,h2,h3,h4,h5,h6,hr,menu,ol,p,pre,ul{margin:0}dialog,fieldset,legend,menu,ol,ul{padding:0}*,::after,::before{box-sizing:border-box;border:0 solid #e5e7eb;--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{line-height:inherit}hr{height:0;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}menu,ol,ul{list-style:none}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.mx-auto{margin-left:auto;margin-right:auto}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.flex{display:flex}.h-12{height:3rem}.min-h-\\[100dvh\\]{min-height:100dvh}.w-12{width:3rem}.max-w-md{max-width:28rem}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-center{justify-content:center}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.overflow-x-scroll{overflow-x:scroll}.rounded-md{border-radius:.375rem}.border{border-width:1px}.border-2{border-width:2px}.border-gray-800{--tw-border-opacity:1;border-color:rgb(31 41 55 / var(--tw-border-opacity))}.border-transparent{border-color:transparent}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-gray-800,.hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}.bg-gray-900,.hover\\:bg-gray-900:hover{--tw-bg-opacity:1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.stroke-red-400{stroke:#f87171}.p-1\\.5{padding:.375rem}.p-4{padding:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-8{padding-left:2rem;padding-right:2rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.text-left{text-align:left}.text-center{text-align:center}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.tracking-tight{letter-spacing:-.025em}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\\:text-white:hover,.text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.shadow-sm{--tw-shadow:0 1px 2px 0 rgb(0 0 0 / 0.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4,0,0.2,1);transition-duration:150ms}@media (min-width:640px){.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}`\n", "import { BareClient, type BareResponseFetch } from '@mercuryworkshop/bare-mux'\nimport { version } from '../package.json'\nimport { getCookies, setCookies } from './bundle/util/cookies'\nimport errorpagecss from './errorpagecss'\n\ndeclare global {\n  interface Window {\n    MeteorServiceWorker: typeof MeteorServiceWorker\n  }\n}\n\nclass MeteorServiceWorker {\n  client: BareClient\n  constructor() {\n    this.client = new BareClient()\n  }\n  shouldRoute({ request }: FetchEvent) {\n    return request.url.startsWith(location.origin + self.$meteor.config.prefix)\n  }\n\n  async handleFetch({ request }: FetchEvent) {\n    try {\n      const url = new URL(self.$meteor.rewrite.url.decode(request.url))\n      self.$meteor.util.log(`Processing request for ${url.href}`)\n      for (const plugin of self.$meteor.config.plugins) {\n        if (plugin.filter.test(url.href)) {\n          self.$meteor.util.log(\n            `Plugin ${plugin.name} loaded for this page`,\n            'teal'\n          )\n        }\n      }\n\n      if (url.href.startsWith('data:')) {\n        const response = await fetch(url)\n\n        return new Response(response.body)\n      }\n\n      const fetchHead = new Headers(request.headers)\n      fetchHead.set('cookie', (await getCookies(url.host)).join('; '))\n      fetchHead.set('host', url.host)\n      fetchHead.set('origin', url.origin)\n\n      let response: BareResponseFetch = await this.client.fetch(url, {\n        method: request.method,\n        body: request.body,\n        headers: fetchHead,\n        credentials: 'omit',\n        mode: request.mode === 'cors' ? request.mode : 'same-origin',\n        cache: request.cache,\n        redirect: request.redirect,\n        // @ts-expect-error\n        duplex: 'half'\n      })\n\n      let body: ReadableStream | string\n      const rewrittenHeaders = self.$meteor.rewrite.headers(\n        response.headers,\n        url\n      )\n      await setCookies(response.rawHeaders['set-cookie'], url.host)\n\n      if (response.body) {\n        switch (request.destination) {\n          case 'iframe':\n          case 'frame':\n          case 'document':\n            if (response.headers.get('content-type')?.includes('text/html')) {\n              body = self.$meteor.rewrite.html(await response.text(), url)\n            } else {\n              body = response.body\n            }\n            break\n          case 'style':\n            body = self.$meteor.rewrite.css(await response.text(), url)\n            break\n          case 'worker':\n          case 'sharedworker':\n          case 'script':\n            body = self.$meteor.rewrite.js(await response.text(), url)\n            break\n          default:\n            body = response.body\n        }\n      }\n      // From Ultraviolet\n      if (['document', 'iframe'].includes(request.destination)) {\n        const header = response.headers.get('content-disposition')\n\n        if (!/\\s*?((inline|attachment);\\s*?)filename=/i.test(header)) {\n          const type = /^\\s*?attachment/i.test(header) ? 'attachment' : 'inline'\n          const [filename] = response.finalURL.split('/').reverse()\n          response.headers.set(\n            'Content-Disposition',\n            `${type}; filename=${JSON.stringify(filename)}`\n          )\n        }\n      }\n\n      for (const plugin of self.$meteor.config.plugins) {\n        if (plugin.filter.test(url.href)) {\n          if ('onRequest' in plugin) {\n            self.$meteor.util.log(\n              `Running onRequest for ${plugin.name}`,\n              'teal'\n            )\n            response = await plugin.onRequest(response)\n          }\n        }\n      }\n\n      return new Response(body, {\n        headers: rewrittenHeaders,\n        status: response.status,\n        statusText: response.statusText\n      })\n    } catch (error) {\n      self.$meteor.util.log(error, '#FF5757')\n      const url = self.$meteor.rewrite.url.decode(request.url)\n      return this.renderError(error, url, version)\n    }\n  }\n\n  renderError(error: Error, url: string, version: string) {\n    return new Response(\n      `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>Something went wrong</title>\n            <!-- generated with https://play.tailwindcss.com/ -->\n            <style>${errorpagecss}</style>\n          </head>\n          <body>\n            <div class=\"flex min-h-[100dvh] flex-col items-center justify-center bg-white px-4 py-12 sm:px-6 lg:px-8\">\n              <div class=\"mx-auto max-w-md text-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  class=\"mx-auto h-12 w-12 stroke-red-400\"\n                >\n                  <path\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\n                  ></path>\n                </svg>\n                <h1 class=\"mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\n                  Something went wrong\n                </h1>\n                <p class=\"mt-4 text-gray-500\">\n                  Meteor ran into an error while processing your request.\n                </p>\n                <div class=\"mt-6 space-y-4\">\n                  <p class=\"mt-4 text-gray-500 text-left\">URL: <span class=\"p-1.5 px-2 bg-gray-100 font-mono text-sm rounded-md\">${url}</span></p>\n                  <p class=\"mt-4 text-gray-500 text-left\">Version: <span class=\"p-1.5 px-2 bg-gray-100 font-mono text-sm rounded-md\">${version}</span></p>\n                  <pre class=\"rounded-md bg-gray-100 p-4 text-left text-sm text-gray-500 overflow-x-scroll\">${error}</pre>\n                  <div class=\"flex space-x-2\">\n                    <button onclick=\"window.location.reload()\" class=\"rounded-md border border-transparent bg-gray-800 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gray-900 flex-1 transition-all\">\n                      Reload Page\n                    </button>\n                    <a href=\"https://github.com/meteorproxy/meteor/issues/new\" target=\"_blank\" class=\"rounded-md border-2 border-gray-800 px-4 py-2 text-sm font-medium text-gray-800 hover:bg-gray-800 hover:text-white flex-1 transition-all\">\n                      Report Error\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </body>\n        </html>\n      `,\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'text/html'\n        }\n      }\n    )\n  }\n}\n\nself.MeteorServiceWorker = MeteorServiceWorker\n"],
  "mappings": "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",
  "names": ["require_set_cookie", "__commonJSMin", "exports", "module", "defaultParseOptions", "isNonEmptyString", "str", "parseString", "setCookieValue", "options", "parts", "nameValuePairStr", "parsed", "parseNameValuePair", "name", "value", "e", "cookie", "part", "sides", "key", "nameValueArr", "parse", "input", "sch", "cookies", "splitCookiesString", "cookiesString", "cookiesStrings", "pos", "start", "ch", "lastComma", "nextStart", "cookiesSeparatorFound", "skipWhitespace", "notSpecialChar", "fetch", "WebSocket", "Request", "Response", "SharedWorker", "localStorage", "serviceWorker", "WebSocketFields", "searchForPort", "promises", "x", "port", "tryGetPort", "testPort", "promise", "_", "reject", "err", "client", "channel", "resolve", "event", "pingChannel", "pingPromise", "createPort", "path", "registerHandlers", "worker", "newWorker", "WorkerConnection", "worker", "workerPath", "inInit", "searchForPort", "event", "SharedWorker", "createPort", "localStorage", "path", "message", "transferable", "testPort", "channel", "toTransfer", "promise", "resolve", "reject", "validChars", "validProtocol", "protocol", "i", "char", "wsProtocols", "statusEmpty", "statusRedirect", "BareClient", "worker", "WorkerConnection", "remote", "protocols", "webSocketImpl", "requestHeaders", "arrayBufferImpl", "wsProtocols", "proto", "validProtocol", "wsImpl", "WebSocket", "socket", "fakeProtocol", "fakeReadyState", "WebSocketFields", "initialErrorHappened", "e", "initialCloseHappened", "onopen", "protocol", "onmessage", "payload", "onclose", "code", "reason", "onerror", "channel", "event", "getReadyState", "getSendError", "args", "error", "data", "url", "init", "req", "Request", "inputHeaders", "headers", "body", "urlO", "response", "fetch", "result", "Response", "i", "resp", "responseobj", "statusEmpty", "redirect", "statusRedirect", "location", "version", "assign", "STORAGE", "READONLY", "READWRITE", "defaultOptions", "result", "IDBMap", "#db", "#options", "#prefix", "#transaction", "what", "how", "t", "onsuccess", "onerror", "name", "durability", "prefix", "resolve", "reject", "transaction", "event", "boundDispatch", "key", "type", "message", "isTrusted", "store", "keys", "value", "callback", "context", "fieldContentRegExp", "serialize", "name", "value", "options", "opt", "enc", "encode", "fieldContentRegExp", "encodedValue", "str", "maxAge", "isDate", "val", "encode", "val", "import_set_cookie_parser", "cookies", "IDBMap", "getCookies", "host", "now", "result", "key", "isExpired", "cookie", "serialize", "setCookies", "header", "parsed", "errorpagecss_default", "MeteorServiceWorker", "BareClient", "request", "url", "plugin", "response", "fetchHead", "getCookies", "body", "rewrittenHeaders", "setCookies", "header", "type", "filename", "error", "version", "errorpagecss_default"]
}
